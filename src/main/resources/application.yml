app:
  oauth2:
    authorizedRedirectUri: ${FRONTEND_URL}/oauth2/redirect
frontend-url: ${FRONTEND_URL}
logging:
  level:
    org:
      springframework:
        security: error


spring:
  sql:
    init:
      mode: always
  datasource:
    url: jdbc:postgresql://localhost:5432/unknown
    username: khojiakbar
    password: 
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        search:
          backend:
            analysis:
              configurer: uz.akramovxm.unknownback.config.AnalyzerConfig
            type: lucene
            directory:
              type: local-filesystem
              root: ./indexes
    defer-datasource-initialization: true
    show-sql: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${jjpazmxzkpcnoajr}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: http://${BACKEND_URL}/oauth2/callback/{registrationId}
            scope:
              - email
              - profile
          facebook:
            client-id: ${FACEBOOK_CLIENT_ID}
            client-secret: ${FACEBOOK_CLIENT_SECRET}
            redirect-uri: http://${BACKEND_URL}/oauth2/callback/{registrationId}
            scope:
              - email
              - public_profile
        provider:
          facebook:
            authorization-uri: https://www.facebook.com/v3.0/dialog/oauth
            token-uri: https://graph.facebook.com/v3.0/oauth/access_token
            user-info-uri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,picture
#server:
#  address: 192.168.100.9